

drop database mockstock;
create database mockstock;
use mockstock;

CREATE TABLE Colleges (
  CollegeID INT PRIMARY KEY AUTO_INCREMENT,
  CollegeName VARCHAR(255) NOT NULL,
  CollegePassword VARCHAR(255) NOT NULL
);

CREATE TABLE Competitions (
  CompetitionID INT PRIMARY KEY AUTO_INCREMENT,
  CollegeID INT NOT NULL,
  CompetitionName VARCHAR(255) NOT NULL,
  StartDate DATETIME NOT NULL,
  EndDate DATETIME NOT NULL,
  InitialCash DECIMAL(10,2) NOT NULL,
  NumberOfParticipants INT NOT NULL,
  FOREIGN KEY (CollegeID) REFERENCES Colleges(CollegeID)
);

CREATE TABLE Teams (
  TeamID INT PRIMARY KEY AUTO_INCREMENT,
  TeamPassword VARCHAR(255) NOT NULL,
  CompetitionID INT NOT NULL,
  TeamName VARCHAR(255) NOT NULL,
  Email VARCHAR(255),
  CurrentCash DECIMAL(10,2) NOT NULL DEFAULT 0,
  FOREIGN KEY (CompetitionID) REFERENCES Competitions(CompetitionID)
);

CREATE TABLE Sectors (
  SectorID INT PRIMARY KEY AUTO_INCREMENT,
  SectorName VARCHAR(255) NOT NULL
);

CREATE TABLE Stocks (
  CompetitionID INT NOT NULL,
  StockSymbol VARCHAR(10) NOT NULL,
  StockName VARCHAR(255) NOT NULL,
  InitialPrice DECIMAL(10,2) NOT NULL,
  CurrentPrice DECIMAL(10,2) NOT NULL,
  AvailableShares INT NOT NULL DEFAULT 0,
  TotalShares INT NOT NULL,
  BuyOrders INT NOT NULL DEFAULT 0,
  SellOrders INT NOT NULL DEFAULT 0,
  BetaValue DECIMAL(10,2),
  SectorID INT NOT NULL,
  PRIMARY KEY (StockSymbol, CompetitionID),
  FOREIGN KEY (CompetitionID) REFERENCES Competitions(CompetitionID),
  FOREIGN KEY (SectorID) REFERENCES Sectors(SectorID)
);


CREATE TABLE Transactions (
  TransactionID INT PRIMARY KEY AUTO_INCREMENT,
  TeamID INT NOT NULL,
  StockSymbol VARCHAR(10) NOT NULL,
  CompetitionID INT NOT NULL,
  TransactionType ENUM('BUY', 'SELL') NOT NULL,
  TransactionTime DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, 
  Price DECIMAL(10,2) NOT NULL,
  Quantity INT NOT NULL,
  FOREIGN KEY (TeamID) REFERENCES Teams(TeamID),
  FOREIGN KEY (StockSymbol, CompetitionID) REFERENCES Stocks(StockSymbol, CompetitionID)
);

CREATE TABLE StockGraphs (
  stockSymbol VARCHAR(10) NOT NULL,
  competitionID INT NOT NULL,
  timest DATETIME NOT NULL,
  price DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (stockSymbol, competitionID, timest)  -- Composite primary key
--   FOREIGN KEY (stockSymbol, competitionID) REFERENCES Stocks(StockSymbol, CompetitionID)  -- Foreign key relationship
);

CREATE TABLE News (
  NewsID INT PRIMARY KEY AUTO_INCREMENT,  -- Auto-incrementing primary key
  Title VARCHAR(255) NOT NULL,
  Content TEXT NOT NULL,
  ScheduledTime DATETIME NOT NULL
);


DELIMITER //
CREATE TRIGGER set_team_cash_before_insert
BEFORE INSERT ON Teams
FOR EACH ROW
BEGIN
  SET NEW.CurrentCash = (SELECT InitialCash FROM Competitions WHERE CompetitionID = NEW.CompetitionID);
END //
DELIMITER ;

DELIMITER //
CREATE TRIGGER set_available_shares_on_insert
BEFORE INSERT ON Stocks
FOR EACH ROW
BEGIN
  SET NEW.AvailableShares = NEW.TotalShares;
  INSERT INTO StockGraphs(stockSymbol,  competitionID, timest,  price)
  VALUES (NEW.StockSymbol, NEW.CompetitionID, CURRENT_TIMESTAMP(), NEW.InitialPrice);

END //
DELIMITER ;
-- Buy: reduce current cash, reduce availableStocks, update the buy orders, update price
-- Sell: Increase current cash, Increase availableStocks,  update the sell orders, update price



DELIMITER //
CREATE TRIGGER update_current_cash 
AFTER INSERT ON Transactions
FOR EACH ROW
BEGIN

  UPDATE Teams
  SET 
    CurrentCash = CurrentCash - IF(NEW.TransactionType = 'BUY', NEW.Quantity * NEW.Price, 0) + IF(NEW.TransactionType = 'SELL', NEW.Quantity * NEW.Price, 0)
  WHERE TeamID = NEW.TeamID;

END //
DELIMITER ;


DELIMITER //
CREATE TRIGGER update_stock_orders_price
AFTER INSERT ON Transactions
FOR EACH ROW
BEGIN
  DECLARE initial_price DECIMAL(10,2);
  DECLARE new_price DECIMAL(10,2);
  DECLARE buy_orders INT;
  DECLARE sell_orders INT;
  DECLARE supply INT;
  DECLARE beta DECIMAL(10,2);

  UPDATE Stocks
  SET 
    BuyOrders = IF(NEW.TransactionType = 'BUY', BuyOrders + NEW.Quantity, BuyOrders),
    SellOrders = IF(NEW.TransactionType = 'SELL', SellOrders + NEW.Quantity, SellOrders),
    AvailableShares = AvailableShares - IF(NEW.TransactionType = 'BUY', NEW.Quantity, 0) + IF(NEW.TransactionType = 'SELL', NEW.Quantity, 0)
  WHERE StockSymbol = NEW.StockSymbol AND CompetitionID = NEW.CompetitionID;


  SELECT st.BuyOrders, st.SellOrders, st.TotalShares, st.BetaValue, st.InitialPrice
  INTO buy_orders, sell_orders, supply, beta, initial_price
  FROM Stocks st
  WHERE st.StockSymbol = NEW.StockSymbol AND st.CompetitionID = NEW.CompetitionID;

  SET new_price = initial_price + initial_price * ((buy_orders - sell_orders) / supply) * beta;

  UPDATE Stocks
  SET CurrentPrice = new_price
  WHERE StockSymbol = NEW.StockSymbol AND CompetitionID = NEW.CompetitionID;
  
  INSERT INTO StockGraphs(stockSymbol,  competitionID, timest,  price)
  VALUES (NEW.StockSymbol, NEW.CompetitionID, NEW.TransactionTime, NEW.price);
  
END //
DELIMITER ;
INSERT INTO Colleges (CollegeName, CollegePassword) VALUES 
  ('NM College', 'password123'),
  ('DJSCE', 'password456');

INSERT INTO Competitions (CollegeID, CompetitionName, StartDate, EndDate, InitialCash, NumberOfParticipants) VALUES
  (1, 'Mock Stock Tester', '2024-05-23 00:00:00', '2024-05-23 15:00:00', 10000.00, 10),
  (2, 'Trading Competition', '2024-07-24 00:00:00', '2024-07-24 11:00:00', 5000.00, 5);

INSERT INTO Teams (CompetitionID, TeamPassword, TeamName, Email) VALUES
  (1, 'team123', 'The Investment Club', 'invest@nm.edu'),
  (1, 'team456', 'The Wolf of Wall Street', 'wallstreet@nm.edu'),
  (2, 'team789', 'The Market Movers', 'movers@djsce.edu');

INSERT INTO Sectors (SectorName) VALUES
  ('Technology'),
  ('Healthcare'),
  ('Consumer Staples');

INSERT INTO Stocks (CompetitionID, StockSymbol, StockName, InitialPrice, CurrentPrice, TotalShares, BetaValue, SectorID) VALUES
  (1, 'AAPL', 'Apple Inc.', 150.00, 150.00, 10000, 1.00, 1),
  (1, 'AMZN', 'Amazon.com Inc.', 120.00, 120.00, 8000, 1.20, 2),
  (1, 'TSLA', 'Tesla Inc.', 200.00, 200.00, 5000, 1.50, 1),
  (2, 'AAPL', 'Apple Inc.', 150.00, 150.00, 10000, 1.00, 1),
  (2, 'AMZN', 'Amazon.com Inc.', 120.00, 120.00, 8000, 1.20, 2),
  (2, 'TSLA', 'Tesla Inc.', 200.00, 200.00, 5000, 1.50, 1),
  (2, 'JNJ', 'Johnson & Johnson', 130.00, 130.00, 7000, 0.80, 3),
  (1, 'JNJ', 'Johnson & Johnson2', 130.00, 130.00, 7000, 0.80, 3);
INSERT INTO Transactions (TeamID, CompetitionID, StockSymbol, TransactionTime, TransactionType, Price, Quantity)
VALUES (1, 1, 'AAPL','2024-05-24 00:00:00', 'BUY',  150.25, 10),
	   (1, 1, 'AMZN','2024-05-24 00:00:00',  'BUY', 120.00, 5),
       (1, 1, 'TSLA','2024-05-24 00:10:00',  'BUY', 200.50, 20),
       (1, 1, 'JNJ' ,'2024-05-24 00:10:00',  'BUY', 130.50, 12),
       (1, 1, 'AAPL','2024-05-24 11:20:00',  'SELL',  150.25, 2),
	   (1, 1, 'AMZN','2024-05-24 11:20:00',  'SELL', 120.00, 3),
       (1, 1, 'TSLA','2024-05-24 11:20:00',  'SELL', 200.50, 12),
       (1, 1, 'JNJ' ,'2024-05-24 11:20:00',  'SELL', 130.50, 5),

       (2, 1, 'AAPL','2024-05-23 02:00:00',  'BUY',  155.25, 12),
	   (2, 1, 'AMZN','2024-05-23 02:00:00',  'BUY', 124.00, 10),
       (2, 1, 'TSLA','2024-05-23 02:00:00',  'BUY', 212.50, 21),
       (2, 1, 'JNJ' ,'2024-05-23 02:00:00',  'BUY', 135.50, 14),
       (2, 1, 'AAPL','2024-05-23 10:00:00',  'SELL',  150.25, 5),
	   (2, 1, 'AMZN','2024-05-23 10:00:00',  'SELL', 120.00, 8),
       (2, 1, 'TSLA','2024-05-23 10:00:00',  'SELL', 200.50, 12),
       (2, 1, 'JNJ' ,'2024-05-23 10:00:00',  'SELL', 135.50, 3),

       (3, 2, 'AAPL','2024-05-23 00:00:00',  'BUY',  155.25, 12),
	   (3, 2, 'AMZN','2024-05-23 00:00:00',  'BUY', 124.00, 11),
       (3, 2, 'TSLA','2024-05-23 00:00:00',  'BUY', 212.50, 16),
       (3, 2, 'JNJ' ,'2024-05-23 00:00:00',  'BUY', 135.50, 4),
       (3, 2, 'AAPL','2024-05-23 02:00:00',  'SELL',  150.25, 11),
	   (3, 2, 'AMZN','2024-05-23 02:00:00',  'SELL', 120.00, 2),
       (3, 2, 'TSLA','2024-05-23 02:00:00',  'SELL', 200.50, 11),
       (3, 2, 'JNJ' ,'2024-05-23 02:00:00',  'SELL', 135.50, 1);
       
INSERT INTO News (Title, Content, ScheduledTime) VALUES
  ('Stock Market Soars!', 'The major stock indices all closed up significantly today...', '2024-06-03 10:00:00'),
  ('Tech Giant Announces New Product', 'A leading tech company unveiled its latest innovation...', '2024-06-05 14:00:00'),
  ('Economic Data Shows Positive Signs', 'Recent economic indicators suggest a potential...', '2024-06-10 08:00:00'),
  ('Industry Leader Makes Acquisition', 'A major player in the [Industry] sector acquired...', '2024-06-12 16:00:00'),
  ('Market Correction Expected?', 'Analysts warn of a possible short-term market...', '2024-06-17 12:00:00');

